snippet php
	<?php
	${1}
	?>
snippet ec
	echo "${1:string}"${2};
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_GET['...']
	$_GET['${1:variable}']${2}
snippet $_POST['...']
	$_POST['${1:variable}']${2}
snippet $_REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	**/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	**/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	**/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	**/
	${1:}class ${2:} {
		${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	**/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	**/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	**/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	**/
	${1}function ${2}(${3}){
		${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @copyright ${4:$2}, `strftime('%d %B %Y')`
	 * @package ${5:default}
	**/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	**/
	interface ${1:} {
		${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/
	class ${4:ClassName} {
		
		public function ${5:__construct}(${6:argument}) {
			${7:// code...}
		}
	}
snippet classe
	/**
	 * ${1}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/
	class ${4:ClassName} extends ${5:AnotherClass} {
		
		public function ${6:__construct}(${7:argument}) {
			${8:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:value}) {
		${3:// code...}
	}
snippet foreachk
	foreach ($${1:variable} as $${2:key} => $${3:value}){
		${4:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet try
	try  {
		${1:// code...}
	} catch (${2:Exception} $e) {
		${3:// code...}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}

##########################################################################
# Own Snippets ###########################################################
##########################################################################

##########################################################################
# GENERAL ################################################################
# Gibt den akt. Timestamp zurueck
snippet time
	`system("date +%s")`
# $this->...
snippet ta
	$this->${1:attr}${2};
snippet tm
	$this->${1:method}(${2:args})${3};
snippet a
	->${1:attr}${2}
snippet m
	->${1:method}(${2:args})${3}
snippet k
	'${1:key}' => ${2:value}
snippet ks
	'${1:key}' => '${2:value}'
snippet $a
	$${1:name}->${2:method}${3}
snippet $m
	$${1:name}->${2:method}(${3:args})${4}
snippet br
	echo "<br />{$${1:variable}}";
snippet dump
	echo '<pre>' . __LINE__ . ': ' . __METHOD__;
	var_dump($${1:variable});
	echo '</pre>';
snippet print
	echo '<pre>' . __LINE__ . ': ' . __METHOD__;
	print_r($${1:variable});
	echo '</pre>';

##########################################################################
# TYPO3 ##################################################################
snippet t3_devlog
	// Severity: 0 is info, 1 is notice, 2 is warning, 3 is fatal error, -1 is "OK" message
	t3lib_div::devLog("${1:message}", '${2:extensionKey}', ${3:severity}, $${4:dataArray});
snippet t3_deplog
	t3lib_div::logDeprecatedFunction();
snippet t3_trim
	t3lib_div::trimExplode(',', $${1:variable}, 1);
snippet t3_view_array
	echo t3lib_div::view_array($${1:variable});
